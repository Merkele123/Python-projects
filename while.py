n = int(input())  # Запрашивает у пользователя целое число и сохраняет его в переменную `n`
i = 1  # Инициализирует переменную-счетчик `i` значением 1
while i <= n:  # Цикл выполняется, пока `i` меньше или равно `n`
    print("hello")  # Выводит "hello" на экран
    i = i + 1  # Увеличивает значение `i` на 1 в каждой итерации

i = 20  # Устанавливает значение переменной `i` равным 20
while i >= 1:  # Цикл выполняется, пока `i` больше или равно 1
    print(i)  # Выводит текущее значение `i` на экран
    i = i - 2  # Уменьшает значение `i` на 2 в каждой итерации


a = int(input())  # Запрашивает у пользователя целое число и сохраняет его в переменной `a`
while a != 0:  # Цикл выполняется, пока введенное значение не равно 0
    print("Another digit:")  # Выводит приглашение для ввода следующего числа
    a = int(input())  # Запрашивает новое значение


guess = input()  # Запрашивает строку ввода и сохраняет её в переменной `guess`
password = "QWERTY"  # Устанавливает пароль как "QWERTY"
while guess != password:  # Цикл выполняется, пока введенное значение не совпадает с паролем
    print("Another try:")  # Выводит приглашение для повторной попытки
    guess = input()  # Запрашивает новый ввод
print("Welcome in")  # Выводит сообщение о входе, если пароль угадан



guess = input()  # Запрашивает строку ввода и сохраняет её в переменной `guess`
password = "QWERTY"  # Устанавливает пароль как "QWERTY"
count = 1  # Инициализирует счетчик попыток значением 1
while guess != password:  # Цикл выполняется, пока введенное значение не совпадает с паролем
    print("Another try:")  # Выводит приглашение для повторной попытки
    count = count + 1  # Увеличивает счетчик попыток
    guess = input()  # Запрашивает новый ввод
print(f"Welcome in, you tried to get in {count} times")  # Выводит сообщение о входе




a = [1, 2, 3] * 5  # Создает список с последовательностью [1, 2, 3], повторенной 5 раз
print(a)  # Выводит весь список

while 3 in a:  # Цикл выполняется, пока в списке есть число 3
    a.remove(3)  # Удаляет первое вхождение числа 3 из списка
    print(a)  # Выводит обновленный список после каждой операции удаления



s = "hello"  # Устанавливает строку `s` равной "hello"
while len(s) > 0:  # Цикл выполняется, пока длина строки `s` больше 0
    print(s[0], s[1:])  # Выводит первый символ и оставшуюся часть строки
    s = s[1:]  # Удаляет первый символ из строки



s = "%&/rfgDRDC49puf4823g"  # Устанавливает строку с набором символов разного типа
while len(s) > 0:  # Цикл выполняется, пока длина строки `s` больше 0
    letter = s[0]  # Извлекает первый символ строки
    if "a" <= letter <= "z":  # Проверяет, является ли символ строчной буквой
        print(letter, "small")  # Выводит букву и сообщение "маленькая"
    elif "A" <= letter <= "Z":  # Проверяет, является ли символ заглавной буквой
        print(letter, "big")  # Выводит букву и сообщение "большая"
    elif letter.isdigit():  # Проверяет, является ли символ цифрой
        print(letter, "digit")  # Выводит цифру и сообщение "цифра"
    else:  # Если символ не буква и не цифра
        print(letter, "is symbol")  # Выводит символ и сообщение "это символ"
    s = s[1:]  # Удаляет первый символ из строки



x = int(input())  # Запрашивает у пользователя целое число и сохраняет его в переменной `x`
amount = 0  # Инициализирует счетчик общего количества цифр
amount2 = 0  # Инициализирует счетчик количества четных цифр
s = 0  # Переменная для суммы всех цифр
mul = 1  # Переменная для произведения всех цифр
max = 0  # Переменная для хранения максимальной цифры
minim = 9  # Переменная для хранения минимальной цифры

while x > 0:  # Цикл выполняется, пока число `x` больше 0
    last = x % 10  # Извлекает последнюю цифру числа `x`
    amount = amount + 1  # Увеличивает счетчик общего количества цифр
    if last % 2 == 0:  # Проверяет, является ли цифра четной
        amount2 += 1  # Увеличивает счетчик количества четных цифр
    s = s + last  # Добавляет цифру к общей сумме
    mul = mul * last  # Умножает цифру на общее произведение
    if last > max:  # Проверяет, больше ли текущая цифра, чем `max`
        max = last  # Обновляет максимальную цифру
    if last < minim:  # Проверяет, меньше ли текущая цифра, чем `minim`
        minim = last  # Обновляет минимальную цифру
    x = x // 10  # Удаляет последнюю цифру из числа `x`

# Вывод результатов
print(f"Total digit amount:{amount}")  # Общее количество цифр
print(f"Total odd digits:{amount2}")  # Количество четных цифр
print(f"Total of all digits:{s}")  # Сумма всех цифр
print(f"Multiply of all digits:{mul}")  # Произведение всех цифр
print(f"Max of all digits:{max}")  # Максимальная цифра
print(f"Min of all digits:{minim}")  # Минимальная цифра




x = int(input())  # Запрашивает у пользователя целое число и сохраняет его в переменной `x`

while x > 0:  # Цикл выполняется, пока число `x` больше 0
    last = x % 5  # Находит остаток от деления числа `x` на 5
    print(last)  # Выводит остаток
    x = x // 5  # Удаляет последнюю "пятеричную цифру" из числа `x`



a = int(input())  # Запрашивает у пользователя первое целое число и сохраняет его в переменной `a`
b = int(input())  # Запрашивает у пользователя второе целое число и сохраняет его в переменной `b`

while a != b:  # Цикл выполняется, пока значения `a` и `b` не станут равными
    if a > b:  # Если `a` больше `b`
        a = a - b  # Вычитаем значение `b` из `a`
    else:  # Если `b` больше или равно `a`
        b = b - a  # Вычитаем значение `a` из `b`
print(a)  # Когда цикл завершится, `a` (или `b`) будет содержать наибольший общий делитель (НОД)



a, b = map(int, input().split())  # Запрашивает у пользователя два числа, разделенные пробелом, и сохраняет их в `a` и `b`

while b > 0:  # Цикл выполняется, пока `b` больше 0
    a, b = b, a % b  # Переставляет `a` на место `b`, а `b` заменяет остатком от деления `a` на `b`
print(a)  # Когда цикл завершится, `a` будет содержать НОД
